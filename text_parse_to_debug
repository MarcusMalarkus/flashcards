class TextParser
  #i: csv file 
  # def initialize(text_file)
  #   @file = text_file
  # end
  #o: set instance variable

  #i: instance variable @file
  def self.read_file(file)
    File.open(file).readlines
  end
  #o: array of strings

  def self.arrays_to_hashes(array_of_strings)
    output = []
    sliced_cards = array_of_strings.each_slice(3).to_a
    sliced_cards.each do |definition, answer|
      output << {:definition => definition.chomp, :answer => answer.chomp}
    end
    output
  end

  #i: array of strings
  # def self.arrays_to_hashes(array_of_strings)
  #   output = []
  #   array_of_strings.each_with_index do |string, index|
  #     # puts index
  #     # card_values ||= {}
  #     if index%3 == 0
  #       # card_values_front = {} # could add ||=
  #       card_values[:definition] = string.chomp
  #       # output << card_values_front.merge(card_values_back)
  #     elsif index%3 == 1
  #       # card_values_back = {}
  #       card_values[:answer] = string.chomp
  #       output << card_values
  #       # card_values = {}
  #       # output << card_values_front.merge(card_values_back)
  #     end
  #   end
  #   output
  # end
  #o: array of hashes

  def self.run(file)
    arrays_to_hashes(read_file(file))
    # call load and arrays_to_hashes, return array of hashes
  end

end

# our_hash = {}
# 10.times do |i|
#   if i % 2 == 0
#     our_hash[:goodtimes] = 'fun'
#   elsif i % 2 == 1
#     our_hash[:bettertimes] = 'great'
#   end
# end
# puts our_hash